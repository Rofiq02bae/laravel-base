name: 🚀 Manual Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment Environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
      image_tag:
        description: 'Docker Image Tag (default: latest)'
        required: false
        default: 'latest'
        type: string
      migrate_database:
        description: 'Run Database Migrations'
        required: false
        default: true
        type: boolean

env:
  IMAGE_NAME: rofiq02bae/laravel-base-app

jobs:
  manual-deploy:
    runs-on: ubuntu-latest
    name: 🚀 Deploy ${{ inputs.environment }}
    environment: ${{ inputs.environment }}
    
    steps:
    - name: 📂 Checkout code
      uses: actions/checkout@v4

    - name: 🔑 Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 🔍 Verify Image Exists
      run: |
        echo "🔍 Checking if image exists: ${{ env.IMAGE_NAME }}:${{ inputs.image_tag }}"
        docker manifest inspect ${{ env.IMAGE_NAME }}:${{ inputs.image_tag }}

    - name: 📋 Deployment Summary
      run: |
        echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Parameter | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Environment | \`${{ inputs.environment }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "| Image Tag | \`${{ inputs.image_tag }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "| Migrate DB | \`${{ inputs.migrate_database }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "| Triggered by | @${{ github.actor }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Commit | \`${{ github.sha }}\` |" >> $GITHUB_STEP_SUMMARY

    - name: 🚀 Deploy to ${{ inputs.environment }}
      run: |
        echo "🚀 Deploying to ${{ inputs.environment }}..."
        echo "Image: ${{ env.IMAGE_NAME }}:${{ inputs.image_tag }}"
        echo "Migrations: ${{ inputs.migrate_database }}"
        
        # Add your deployment commands here
        # Examples:
        # - kubectl commands
        # - docker-compose commands
        # - SSH to servers
        # - API calls to deployment services
        
        if [ "${{ inputs.migrate_database }}" == "true" ]; then
          echo "🗄️ Running database migrations..."
          # Add migration commands here
        fi
        
        echo "✅ Deployment completed successfully!"

    - name: 🔍 Health Check
      run: |
        echo "🔍 Running health checks..."
        # Add health check commands here
        # Example: curl health endpoints
        
        echo "✅ Health checks passed!"

    - name: 📢 Deployment Notification
      run: |
        echo "📢 Deployment notification sent!"
        echo "Environment: ${{ inputs.environment }}"
        echo "Status: Success ✅"
